!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("base"),require("core")):"function"==typeof define&&define.amd?define(["base","core"],t):"object"==typeof exports?exports["module-devices"]=t(require("base"),require("core")):e["module-devices"]=t(e.base,e.core)}(this,function(e,t){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){var n;(function(e){n=function(require,e,t){"use strict";t.name="module-devices";var n=o(1),r=o(2),i=[r.name];t.exports=n.createModule(t.name,i).provider(o(3))}.call(t,o,t,e),!(void 0!==n&&(e.exports=n))}).call(t,o(4)(e))},function(t,o,n){t.exports=e},function(e,o,n){e.exports=t},function(e,t,o){var n;n=function(require,e,t){"use strict";e.lpDevices=function(){var e="ModuleDevicesError",t={devicesEndpoint:"/mock/v1/authorized-devices",revokeEndpoint:"/mock/v1/authorized-devices/revoke/$(deviceId)"};this.$get=function(o,n,r,i){function c(){var e=function(){this.devices=[]},c=function(e){return e&&r.isArray(e)?(r.forEach(e,function(e,t){e.lastAccess=new Date(e.lastAccess).getTime(),r.forEach(["isCurrentDevice","isCurrentSession"],function(t){r.isBoolean(e[t])||(e[t]="true"===e[t]?!0:!1)})}),e):[]};return e.prototype.getAll=function(){var e=n.defer();return o.get(t.devicesEndpoint).then(function(t){e.resolve(c(t.data))},function(e){i.throwException(new s(e))}),e.promise},e.prototype.revoke=function(e){e||i.throwException(new s("No device ID provided!"));var r=n.defer();return o.put(t.revokeEndpoint,{data:{deviceId:e},headers:{Accept:"application/json","Content-Type":"application/json;"}}).then(function(e){r.resolve(!0)},function(e){i.throwException(new s(e))}),r.promise},new e}var s=i.createException(e);return{setConfig:function(e){return t=r(e).chain().mapValues(r.resolvePortalPlaceholders).defaults(t).value(),this},getConfig:function(e){return e&&r.isString(e)?t[e]:t},api:c}},this.$get.$inject=["$http","$q","lpCoreUtils","lpCoreError"]}}.call(t,o,t,e),!(void 0!==n&&(e.exports=n))},function(e,t,o){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}}])});