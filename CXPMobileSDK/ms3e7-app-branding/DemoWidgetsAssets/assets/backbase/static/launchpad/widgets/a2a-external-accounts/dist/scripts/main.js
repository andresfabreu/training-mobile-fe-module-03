!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("base"),require("core"),require("ui")):"function"==typeof define&&define.amd?define(["base","core","ui"],e):"object"==typeof exports?exports["widget-a2a-external-accounts"]=e(require("base"),require("core"),require("ui")):t["widget-a2a-external-accounts"]=e(t.base,t.core,t.ui)}(this,function(t,e,n){return function(t){function e(a){if(n[a])return n[a].exports;var o=n[a]={exports:{},id:a,loaded:!1};return t[a].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){var a;(function(t){a=function(require,t,e){"use strict";function a(){}e.name="widget-a2a-external-accounts";var o=n(1),r=n(2),c=n(3),i=[r.name,c.name];e.exports=o.createModule(e.name,i).controller(n(4)).directive(n(5)).service(n(6)).run(a)}.call(e,n,e,t),!(void 0!==a&&(t.exports=a))}).call(e,n(7)(t))},function(e,n,a){e.exports=t},function(t,n,a){t.exports=e},function(t,e,a){t.exports=n},function(t,e,n){var a;a=function(require,t){"use strict";t.MainCtrl=function(t){var e=this;e.viewState="view.list",t.$on("a2aExternalTransfers.viewStateChange",function(t,n){e.viewState=n.view,e.model=n.account,e.errors=[]}),t.$on("a2aExternalTransfers.errorOccured",function(t,n){e.errors=n.errors})},t.MainCtrl.$inject=["$scope"],t.ListController=function(t,e,n,a){var o=this;o.sharedData=e,o.accStatus=n.accountStatusEnum,o.add=function(e){t.$emit("a2aExternalTransfers.viewStateChange",{view:"view.edit",account:new n(e)})},o.loadData=function(){o.loading=!0,o.error=!1,e.init(),n.getAll().then(function(t){a.forEach(t,function(t,n){e.accounts[t.group].push(t)})},function(t){o.error=!0})["finally"](function(){o.loading=!1})};var r=function(){o.loadData()};r()},t.ListController.$inject=["$scope","ExtAccountsSharedData","ExternalAccountsModel","lpCoreUtils"],t.EditController=function(t,e){var n=this;n.model=new e,n.model.$categories().then(function(t){n.categories=t}),n.submit=function(a){n.loading=!0,e.createOrUpdate(a).then(function(e){t.$emit("a2aExternalTransfers.viewStateChange",{view:"view.list"})},function(e){t.$emit("a2aExternalTransfers.errorOccured",{errors:e.data.errors})})["finally"](function(){n.loading=!1})},n.cancel=function(){t.$emit("a2aExternalTransfers.viewStateChange",{view:"view.list"})}},t.EditController.$inject=["$scope","ExternalAccountsModel"],t.ActivationController=function(t,e){var n=this;n.model=new e,n.activate=function(e){n.loading=!0,n.model.$activate().then(function(e){t.$emit("a2aExternalTransfers.viewStateChange",{view:"view.list"})},function(e){t.$emit("a2aExternalTransfers.errorOccured",{errors:e.data.errors})})["finally"](function(){n.loading=!1})},n.cancel=function(){t.$emit("a2aExternalTransfers.viewStateChange",{view:"view.list"})}},t.ActivationController.$inject=["$scope","ExternalAccountsModel"],t.RemoveConfirmationCtrl=function(t,e,n,a,o,r){t.error={isError:!1,message:""},t.account=a,t.remove=function(){n.close(t.account)},t.cancel=function(){n.dismiss("cancel")}},t.RemoveConfirmationCtrl.$inject=["$scope","$timeout","$modalInstance","account","ExtAccountsSharedData","ExternalAccountsModel"]}.call(e,n,e,t),!(void 0!==a&&(t.exports=a))},function(t,e,n){var a;a=function(require,t,e){"use strict";t.accountGroup=function(t,e,n,a,o){var r=e.getWidgetBaseUrl(n)+"/templates",c='<div class="modal-header">    <h2><i class="lp-icon lp-icon-xxl lp-icon-info-sign"></i> <span lp-i18n="Please confirm"></span></h2></div><form role="form" ng-submit="remove()">    <div class="modal-body">        <div ng-show="review.modalError">        <div alert="alert" type="danger">{{ review.modalError | translate }}</div>        </div>        <p>            <b lp-i18n="Are you sure you want to remove this external account?"></b>        </p>        <div class="row">            <div class="col-xs-8">            <span class="h4" itemprop="nickName"> {{account.nickName}}</span>        </div>    </div>    <div class="row">        <div class="col-xs-12">            <small class="text-muted">                {{ account.bankName }}            </small>        </div>    </div>    <div class="modal-footer text-right" >        <div ng-show="error.isError" class="bg-warning text-danger pull-left" lp-i18n="Server error!"></div>        <button name="closeModal" class="btn btn-link" ng-click="cancel()" type="button" lp-i18n="Cancel"></button>        <button type="submit" class="btn btn-danger" lp-i18n="Remove"></button>    </div></form>',i=function(e,n,r){e.statusEnum=a.accountStatusEnum,e.edit=function(t){e.$emit("a2aExternalTransfers.viewStateChange",{view:"view.edit",account:new a(t)})},e.remove=function(e){var n=t.open({template:c,controller:"RemoveConfirmationCtrl",resolve:{account:function(){return e}}});n.result.then(function(t){e.loading=!0,new a(e).$remove().then(function(t){var n=o.accounts[e.group];n.splice(n.indexOf(e),1)})["finally"](function(){e.loading=!1})},function(t){console.log(t)})},e.activate=function(t){e.$emit("a2aExternalTransfers.viewStateChange",{view:"view.activate",account:new a(t)})}};return{restrict:"EA",link:i,templateUrl:r+"/group.ng.html",scope:{header:"@",listItems:"="}}},t.accountGroup.$inject=["$modal","lpCoreUtils","lpWidget","ExternalAccountsModel","ExtAccountsSharedData"]}.call(e,n,e,t),!(void 0!==a&&(t.exports=a))},function(t,e,n){var a;a=function(require,t,e){"use strict";t.ExtAccountsSharedData=function(t,e){this.accounts={},this.accountsExists=function(){return this.accounts[e.accountStatusEnum.PENDING].length>0||this.accounts[e.accountStatusEnum.ACTIVE].length>0||this.accounts[e.accountStatusEnum.PROCESSING].length>0||this.accounts[e.accountStatusEnum.OTHER].length>0},this.init=function(){this.accounts={PendingActivation:[],Active:[],InProcess:[],Other:[]}}},t.ExtAccountsSharedData.$inject=["lpCoreUtils","ExternalAccountsModel"],t.ExternalAccountsModel=function(t,e,n){function a(t){var e={id:t.externalAccountId,bankName:t.bankName,nickName:t.nickName,externalAccountId:t.externalAccountId,routingNumber:t.routingNumber,accountNumber:"******** "+t.accountMask,accountCategory:t.accountCategory,group:n.contains([o.accountStatusEnum.ACTIVE,o.accountStatusEnum.PROCESSING,o.accountStatusEnum.PENDING],t.status)?t.status:o.accountStatusEnum.OTHER,status:t.status};return e}var o,r=n.resolvePortalPlaceholders(e.getPreference("externalAccountsDataSrc"));return o=t(r,{},{query:{method:"GET",interceptor:{response:function(t){var e=t.data.externalAccounts;return e instanceof Array&&e.length>0?e.map(a):e}}},create:{method:"POST"},update:{params:{id:"@id"},method:"PUT"},remove:{params:{id:"@id"},method:"DELETE"},activate:{params:{id:"@id",action:"activation"},method:"PUT"},categories:{params:{action:"account-categories"},method:"GET",cache:!0,interceptor:{response:function(t){return t.data["account-categories"]}}}}),o.getAll=function(){return this.query().$promise},o.createOrUpdate=function(t){return t.id?t.$update():t.$create()},o.accountStatusEnum={ACTIVE:"Active",PROCESSING:"InProcess",PENDING:"PendingActivation",OTHER:"Other"},o},t.ExternalAccountsModel.$inject=["$resource","lpWidget","lpCoreUtils"]}.call(e,n,e,t),!(void 0!==a&&(t.exports=a))},function(t,e,n){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}}])});